import numpy as np

def create_board():
    return np.zeros((6, 7), dtype=int)

def drop_piece(board, row, col, piece):
    board[row][col] = piece

def is_valid_move(board, col):
    return board[5][col] == 0

def get_next_open_row(board, col):
    for row in range(6):
        if board[row][col] == 0:
            return row

def is_winning_move(board, piece):

    for row in range(6):
        for col in range(4):
            if (
                board[row][col] == piece and
                board[row][col+1] == piece and
                board[row][col+2] == piece and
                board[row][col+3] == piece
            ):
                return True

    for row in range(3):
        for col in range(7):
            if (
                board[row][col] == piece and
                board[row+1][col] == piece and
                board[row+2][col] == piece and
                board[row+3][col] == piece
            ):
                return True

    for row in range(3):
        for col in range(4):
            if (
                board[row][col] == piece and
                board[row+1][col+1] == piece and
                board[row+2][col+2] == piece and
                board[row+3][col+3] == piece
            ):
                return True

    for row in range(3, 6):
        for col in range(4):
            if (
                board[row][col] == piece and
                board[row-1][col+1] == piece and
                board[row-2][col+2] == piece and
                board[row-3][col+3] == piece
            ):
                return True

    return False

def print_board(board):
    print(np.flip(board, 0))

def play_connect_four():
    board = create_board()
    game_over = False
    turn = 1

    while not game_over:
        if turn % 2 == 1:
            player = 1
        else:
            player = 2

        print_board(board)
        col = int(input("Player {}'s turn. Choose a column (0-6): ".format(player)))

        if is_valid_move(board, col):
            row = get_next_open_row(board, col)
            drop_piece(board, row, col, player)

            if is_winning_move(board, player):
                print_board(board)
                print("Player {} wins!".format(player))
                game_over = True

            turn += 1

        else:
            print("Invalid move. Please try again.")

        if turn > 42:
            print_board(board)
            print("It's a tie!")
            game_over = True

play_connect_four()
